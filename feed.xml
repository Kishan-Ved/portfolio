<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://kishanved.tech//feed.xml" rel="self" type="application/atom+xml"/><link href="https://kishanved.tech//" rel="alternate" type="text/html" hreflang="en"/><updated>2024-05-21T10:20:06+00:00</updated><id>https://kishanved.tech//feed.xml</id><title type="html">Kishan Ved</title><subtitle>Kishan Ved&apos;s portfolio website. </subtitle><entry><title type="html">GSoC’24 Week 2</title><link href="https://kishanved.tech//blog/week2" rel="alternate" type="text/html" title="GSoC’24 Week 2"/><published>2024-05-19T00:00:00+00:00</published><updated>2024-05-19T00:00:00+00:00</updated><id>https://kishanved.tech//blog/week2</id><content type="html" xml:base="https://kishanved.tech//blog/week2"><![CDATA[<h5 id="may-12---may-19">[May 12 - May 19]</h5> <h2 id="c-backend-for-node-treenode-and-arrayfortrees">C++ backend for Node, TreeNode and ArrayForTrees</h2> <hr/> <h3 id="coding-info"><ins>Coding info</ins></h3> <p>In my second week of GSoC, I have worked on coding up the C++ backend for 3 classes: Node, TreeNode and ArrayForTrees. The backend follows the structure in their Python implementations. These C++ classes’ objects can now be called in the Binary Trees class.</p> <h3 id="relevant-prs"><ins>Relevant PRs:</ins></h3> <p>I worked on the PR: <a href="https://github.com/codezonediitj/pydatastructs/pull/556">#556</a></p> <p>Important commits include:</p> <ul> <li><a href="https://github.com/codezonediitj/pydatastructs/pull/556/commits/46a65cf9d96f2405bc901e649ac2b31afd8efc3a">C++ backend for Node class</a></li> <li><a href="https://github.com/codezonediitj/pydatastructs/pull/556/commits/da8fb74b5443c5ae7867d5cdbf473b073597e8e7">C++ backend for TreeNode class</a></li> <li><a href="https://github.com/codezonediitj/pydatastructs/pull/556/commits/0665403a539f00d533df86458abccb60e654193d">C++ backend for ArrayForTrees class</a></li> </ul> <p>There have been a large number of commits, these involve addition of C++ backend for Node class, TreeNode class (which has Node as it’s base class) and ArrayForTrees class (which has DynamicOneDimensionalArray as it’s base class). Other commits fix errors and segfaults encountered and have code quality corrections.</p> <p>In the following week, I will test all the code in this PR. It will be tested against the existing test cases and I will add more tests, covering edge cases that might occur. I will also add code to redirect control to this C++ backend (from Python), when the necessary backend parameter is passed.</p> <h3 id="learningsdifficulties"><ins>Learnings/Difficulties</ins></h3> <p>I learned how to define the “parent class and child class” structure in Python-C API, inheritance from the super class and making objects of a class using Python-C API. Thanks to my mentor, <a href="https://github.com/czgdp1807">Gagandeep Singh</a> for resolving the issues I faced.</p> <p><br/></p> <p>See you next week with more updates! :)</p>]]></content><author><name></name></author><category term="Weekly_Blogs"/><category term="GSoC&apos;24"/><summary type="html"><![CDATA[C++ backend for Node, TreeNode and ArrayForTrees]]></summary></entry><entry><title type="html">GSoC’24 Week 1</title><link href="https://kishanved.tech//blog/week1" rel="alternate" type="text/html" title="GSoC’24 Week 1"/><published>2024-05-12T00:00:00+00:00</published><updated>2024-05-12T00:00:00+00:00</updated><id>https://kishanved.tech//blog/week1</id><content type="html" xml:base="https://kishanved.tech//blog/week1"><![CDATA[<h5 id="may-5---may-12">[May 5 - May 12]</h5> <h2 id="c-backend-for-binary-trees-and-setting-up-the-repo-for-building-my-code-correctly">C++ backend for Binary Trees and setting up the repo for building my code correctly</h2> <hr/> <h3 id="getting-started"><ins>Getting started</ins></h3> <p>This week was all about getting familiarized with Python-C API, the thing I will be using for my project in GSoC 2024. I started off reading some blogs about extending Python with C++, making a class object structure and referred to the documentation for examples, reference code and necessary functions.</p> <p>I started writing some basic code for Binary Trees and got myself familiarized with the structure and logic followed in the Python implementation of the same. Moreover, this week’s work also involved knowing how to correctly build the library for development, writing scripts and placing code files at the perfect location.</p> <h3 id="relevant-prs"><ins>Relevant PRs:</ins></h3> <p>The following PR was merged: <a href="https://github.com/codezonediitj/pydatastructs/pull/553">#553</a></p> <p>This PR successfully solved and closed the issue: <a href="https://github.com/codezonediitj/pydatastructs/issues/552">#552</a></p> <p>I also worked on the PR: <a href="https://github.com/codezonediitj/pydatastructs/pull/556">#556</a></p> <p>I created a prototype for binary trees in this commit (which is intentionally changed in the PR later): <a href="https://github.com/codezonediitj/pydatastructs/pull/556/commits/2e8edc2079ce2ef9fa88de856c1eebda5988e4a5">Prototype commit for Binary Trees</a></p> <p>As mentioned above, I made another commit to overwrite that commit. This commit aligns the structure with the Python implementation of Binary Trees: <a href="https://github.com/codezonediitj/pydatastructs/pull/556/commits/2a78d84b5289a2dbdc3af3c6bff9ff97e31ff5e2">Binary Trees</a></p> <p>This is going to be a long PR with a lot more work to do. In the coming week, I will add C++ backend for Classes like Node, TreeNode and ArrayForTrees.</p> <h3 id="learningsdifficulties"><ins>Learnings/Difficulties</ins></h3> <p>I learned how to extend Python with C++, which boosts the speed and functionality. Being a beginner in Python-C API, I understood how to manage references, allocate and deallocate memory for members and write good stuctured code following principles of object oriented programming.</p> <p>I faced a few import errors while building (mostly because some script was missing or the code was not at the proper position), but in the end, all were successfully resolved, thanks to my mentor: <a href="https://github.com/czgdp1807">Gagandeep Singh</a>.</p> <p><br/></p> <p>See you next week with more progress! :)</p>]]></content><author><name></name></author><category term="Weekly_Blogs"/><category term="GSoC&apos;24"/><summary type="html"><![CDATA[C++ backend for Binary Trees and setting up the repo for building my code correctly]]></summary></entry><entry><title type="html">GSoC 2024 Meetings log</title><link href="https://kishanved.tech//blog/meetings" rel="alternate" type="text/html" title="GSoC 2024 Meetings log"/><published>2024-05-05T00:00:00+00:00</published><updated>2024-05-05T00:00:00+00:00</updated><id>https://kishanved.tech//blog/meetings</id><content type="html" xml:base="https://kishanved.tech//blog/meetings"><![CDATA[<h4 id="this-blog-serves-as-a-log-for-my-meetings-with-my-gsoc-2024-mentor-gagandeep-singh">This blog serves as a log for my meetings with my GSoC 2024 mentor: Gagandeep Singh</h4> <hr/> <table> <thead> <tr> <th>Sr. No.</th> <th>Meeting Date</th> <th>Discussions</th> </tr> </thead> <tbody> <tr> <td>1</td> <td>2024-05-05</td> <td>Went over existing code, Reviewed and merged my PRs</td> </tr> <tr> <td>2</td> <td>2024-05-10</td> <td>Assistance for Binary Trees backend</td> </tr> <tr> <td>3</td> <td>2024-05-17</td> <td>Reviewed my code, assistance in a few bugs</td> </tr> <tr> <td>4</td> <td>2024-05-19</td> <td>One more meeting for reviewing the existing bugs</td> </tr> </tbody> </table>]]></content><author><name></name></author><category term="Meetings"/><category term="GSoC&apos;24"/><summary type="html"><![CDATA[Log of meetings with my mentor for GSoC 2024]]></summary></entry><entry><title type="html">My GSoC 2024 Project</title><link href="https://kishanved.tech//blog/my_gsoc" rel="alternate" type="text/html" title="My GSoC 2024 Project"/><published>2024-05-03T00:00:00+00:00</published><updated>2024-05-03T00:00:00+00:00</updated><id>https://kishanved.tech//blog/my_gsoc</id><content type="html" xml:base="https://kishanved.tech//blog/my_gsoc"><![CDATA[<h4 id="welcome-to-my-very-first-blog-for-google-summer-of-code-2024">Welcome to my very first blog for <a href="https://summerofcode.withgoogle.com/">Google Summer of Code 2024</a>.</h4> <hr/> <h1 id="my-organization">My Organization</h1> <h5 id="im-contributing-to-numfocus-for-gsoc-2024">I’m contributing to <a href="https://summerofcode.withgoogle.com/programs/2024/organizations/numfocus">NumFOCUS</a> for GSoC 2024.</h5> <p>NumFOCUS supports and promotes world-class, innovative, open source scientific software by acting as an umbrella organization in Google Summer of Code.</p> <h5 id="within-the-numfocus-umbrella-my-project-is-in-collaboration-with-open-science-labs">Within the NumFOCUS umbrella, my project is in collaboration with <a href="https://opensciencelabs.org/">Open Science Labs</a>.</h5> <p>Open Science Labs is a platform dedicated to advancing the scientific research through collaboration, innovation, and education.</p> <h5 id="my-project-is-associated-with-codezoneds-pydatastructs">My Project is associated with <a href="https://codezonediitj.github.io/">CodeZoned</a>’s <a href="https://pydatastructs.readthedocs.io/en/stable/">PyDataStructs</a>.</h5> <hr/> <h1 id="my-project">My project</h1> <h5 id="ill-be-working-on-the-project-add-c-backend-for-all-trees-and-port-stackpy-to-c-backend">I’ll be working on the project: <a href="https://summerofcode.withgoogle.com/programs/2024/projects/2nrxEFTg">Add C++ Backend for all trees and port stack.py to C++ Backend</a>.</h5> <h2 id="project-goals">Project Goals</h2> <p>There are 2 broad goals of my project:</p> <h3 id="1-c-backend-for-binary-trees">1. C++ Backend for Binary Trees</h3> <p>The first goal is to add a C++ backend for all trees present in the <code class="language-plaintext highlighter-rouge">binary_trees.py</code> file. This includes the following trees:</p> <ol> <li>AVL Tree</li> <li>Binary Tree</li> <li>Binary Search Tree</li> <li>Binary Indexed Tree</li> <li>Cartesian Tree</li> <li>Treap</li> <li>Splay Tree</li> <li>Red Black Tree</li> </ol> <p>Different types of tree traversals will be implemented in the C++ backend, including:</p> <ul> <li>Pre Order traversal</li> <li>Post Order traversal</li> <li>In Order traversal</li> <li>Out Order traversal</li> <li>Depth First Search (DFS)</li> <li>Breadth First Search (BFS)</li> </ul> <h3 id="2-porting-stackpy-to-c-backend">2. Porting <code class="language-plaintext highlighter-rouge">stack.py</code> to C++ backend</h3> <p>The second goal is to port <code class="language-plaintext highlighter-rouge">stack.py</code> to the C++ backend. Currently, the Python backend supports the following classes:</p> <ol> <li>Stack</li> <li>Array Stack</li> <li>Linked List Stack</li> </ol> <p>These implementations will be optimized in terms of time and space complexity. Exhaustive tests will be added for all implementations. Adding a C++ backend will make the algorithms run faster, enhancing the utility of PyDataStructs.</p> <hr/> <h1 id="my-proposal">My Proposal</h1> <h5 id="find-my-proposal-for-numfocus-gsoc-2024-here">Find my proposal for NumFOCUS, GSoC 2024 <a href="/assets/pdf/OSL_GSoC_2024.pdf" target="_blank">here</a>.</h5>]]></content><author><name></name></author><category term="GSoC&apos;24"/><category term="GSoC&apos;24"/><summary type="html"><![CDATA[Project info, org description and proposal]]></summary></entry></feed>